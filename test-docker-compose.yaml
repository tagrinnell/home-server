services:
  protonwire:
    container_name: protonwire
    # Use semver tags or sha256 hashes of manifests.
    # using latest tag can lead to issues when used with
    # automatic image updaters like watchtower/podman.
    image: ghcr.io/tprasadtp/protonwire:latest
    init: true
    restart: unless-stopped
    environment:
      # Quote this value as server name can contain '#'.
      PROTONVPN_SERVER: "149.40.58.146" #"node-us-64.protonvpn.net"  # NL-FREE#100070
      # WIREGUARD_PRIVATE_KEY: "gLGL0//1k4LNjX4deP6bCQdUiBZZJTUCjy8EyBXs0Eo="
      # Set this to 1 to show debug logs for issue forms.
      DEBUG: "0"
      # Set this to 0 to disable kill-switch.
      KILL_SWITCH: "1"
    # NET_ADMIN capability is mandatory!
    cap_add:
      - NET_ADMIN
    # sysctl net.ipv4.conf.all.rp_filter is mandatory!
    # net.ipv6.conf.all.disable_ipv6 disables IPv6 as protonVPN does not support IPv6.
    # 'net.*' sysctls are not required on application containers,
    # as they share network stack with protonwire container.
    sysctls:
      net.ipv4.conf.all.rp_filter: 2
      net.ipv6.conf.all.disable_ipv6: 1
    volumes:
      # - type: tmpfs
      #   target: /tmp
      - /mnt/vol/dockerdata/protonwire:/etc/protonwire
      - type: bind
        source: priv
        target: /etc/protonwire/private-key
        read_only: true
    ports:
      - 8080:8080
  # This is sample application which will be routed over VPN
  # Replace this with your preferred application(s).
  # caddy_proxy:
  #   image: caddy:latest
  #   network_mode: service:protonwire
  #   command: |
  #     caddy reverse-proxy \
  #         --change-host-header \
  #         --from :80 \
  #         --to https://ip.me:443
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: torr_test
    network_mode: service:protonwire
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - TORRENTING_PORT=6881
    volumes:
      - /mnt/vol/dockerdata/qbt:/config
      - /mnt/vol/video/Downloads:/downloads # optional
    # ports:
    #   - 8080:8080
    # networks:
    #   container_net:
    #     ipv4_address: 172.28.0.21